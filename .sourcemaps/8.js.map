{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEZ;AAcpC;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAZ3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB5B,4CAA4C;AACF;AACa;AACQ;AAE/D,oDAAoD;AAChB;AACgB;AAC4B;AAOhF;IAYE,mBAAmB,OAAsB;QACvC,qBAAqB;QACb,MAAuB,EACxB,SAA0B,EAC1B,gBAAkC,EACjC,WAAgC;QAL1C,iBAUC;QAVkB,YAAO,GAAP,OAAO,CAAe;QAE/B,WAAM,GAAN,MAAM,CAAiB;QACxB,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,gBAAW,GAAX,WAAW,CAAqB;QAhB1C,yCAAyC;QACzC,iEAAiE;QACjE,6BAA6B;QAC7B,YAAO,GAAwC;YAC7C,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;QAYA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAED,+CAA+C;IACzC,2BAAO,GAAb;;;;;;wBACE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;;;wBAEnB,qBAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;;wBAArG,MAAM,GAAG,SAA4F;wBAC3G,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACX,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;4BAC3C,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;4BAE5C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;4BACtC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,wDAAQ,CAAC,CAAC;wBACjC,CAAC;;;;wBAGD,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;wBAEb,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BAChC,OAAO,EAAE,IAAI,CAAC,gBAAgB;4BAC9B,QAAQ,EAAE,IAAI;4BACd,QAAQ,EAAE,KAAK;yBAChB,CAAC,CAAC;wBACH,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;;KAcnB;IA3DU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;uFAayC;YAEvB,sEAAe;YACb,6EAAe;YACR,iGAAgB;YACpB,MAAmB;OAjB/B,SAAS,CA4DrB;IAAD,CAAC;AAAA;SA5DY,SAAS,e","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","// import { User } from '../../models/user';\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\n\n// import { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { email: string, password: string } = {\n    email: '',\n    password: ''\n  };\n\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    // public user: User,\n    private afAuth: AngularFireAuth,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService, \n    private authService: AuthServiceProvider) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n  }\n\n  // Attempt to login in through our User service\n  async doLogin() {\n    console.log('user: ', this.account);\n    try {\n      const result = await this.afAuth.auth.signInWithEmailAndPassword(this.account.email, this.account.password);\n      if (result) {\n        localStorage.setItem('isLoggedin', 'true');\n        this.authService.setUserCredentials(result);\n        \n        console.log('Login result: ', result);\n        this.navCtrl.setRoot(MainPage);\n      }\n    }\n    catch (e) {\n      console.error(e);\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    }\n    // this.user.login(this.account).subscribe((resp) => {\n    //   this.navCtrl.push(MainPage);\n    // }, (err) => {\n    //   this.navCtrl.push(MainPage);\n    //   // Unable to log in\n    //   let toast = this.toastCtrl.create({\n    //     message: this.loginErrorString,\n    //     duration: 3000,\n    //     position: 'top'\n    //   });\n    //   toast.present();\n    // });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}